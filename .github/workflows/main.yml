name: PyInstaller

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Build with pyinstaller
      run: |
        pyinstaller --onefile AV_Data_Capture.py  --hidden-import ADC_function.py --hidden-import core.py

    - name: Copy config.ini
      run: |
        cp config.ini dist/

    - name: Upload build artifact
      uses: actions/upload-artifact@v1
      with:
        name: AV_Data_Capture-${{ matrix.os }}
        path: dist

  release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: [build]

    steps:
      - name: Set version
        run: echo ::set-env name=VERSION::$(cat $GITHUB_EVENT_PATH | jq -r .tag_name)

      - name: Set upload_url
        run: echo ::set-env name=UPLOAD_URL::$(cat $GITHUB_EVENT_PATH | jq -r .upload_url)

      - name: Download artifact (macos-latest)
        uses: actions/download-artifact@v1
        with:
          name: AV_Data_Capture-macos-latest
          path: AVDC-CLI-${version}-macos-x86_64.zip

      - name: Download artifact (windows-latest)
        uses: actions/download-artifact@v1
        with:
          name: AV_Data_Capture-windows-latest
          path: AVDC-CLI-${version}-windows-x86_64.zip

      - name: Download artifact (ubuntu-latest)
        uses: actions/download-artifact@v1
        with:
          name: AV_Data_Capture-ubuntu-latest
          path: AVDC-CLI-${version}-ubuntu-x86_64.zip

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${upload_url}
          asset_path: AVDC-CLI-${version}-macos-x86_64.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip
